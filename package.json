{
    "name": "@giro3d/giro3d",
    "version": "0.35.0-beta.2",
    "description": "A JS/WebGL framework for 3D geospatial data visualization",
    "keywords": [
        "front-end",
        "web",
        "framework",
        "webgl",
        "webgl2",
        "geography",
        "gis",
        "geospatial",
        "3d",
        "3D",
        "three",
        "three.js",
        "openlayers",
        "map",
        "layer",
        "visualization",
        "pointcloud",
        "3dtiles",
        "raster",
        "vector",
        "geojson",
        "geometry"
    ],
    "scripts": {
        "_build-site-theme": "shx mkdir -p build/site/assets && shx mkdir -p build/site/assets/fonts && npx sass site/bootstrap-custom.scss:build/site/assets/bootstrap-custom.css site/index.scss:build/site/assets/index.css && shx cp node_modules/bootstrap/dist/js/bootstrap.bundle.min.js build/site/assets && shx cp -r node_modules/bootstrap-icons/font/fonts/* build/site/assets/fonts && shx mkdir -p build/site/images && shx cp -r graphics/* build/site/images",
        "_build-static-site": "shx mkdir -p build/site && npm run _build-site-theme && shx cp site/*.html build/site/ && shx cp graphics/favicon* build/site/",
        "_build-tutorials": "shx mkdir -p build/site/ && docco examples/getting-started.js --css site/docco.css -s github-light -l parallel -t site/getting-started.ejs --output build/site/ && shx mv build/site/examples build/site/tutorials",
        "_check-folders": "node tasks/check-folders.mjs src test",
        "_generate-type-definitions": "tsc --declaration --emitDeclarationOnly",
        "_transpile": "shx rm -rf build/giro3d && shx mkdir -p build/giro3d && shx cp -rf src build/giro3d/src && cross-env BABEL_DISABLE_CACHE=1 babel --extensions .ts,.js src --out-dir build/giro3d",
        "build-apidoc": "shx rm -rf build/site/apidoc && tsc -p doc && shx rm -rf build/site/apidoc && typedoc",
        "build-examples:dev": "npm run build && webpack --config examples/webpack/config.mjs --mode=development",
        "build-examples": "npm run build && webpack --stats=verbose --config examples/webpack/config.mjs --mode=production",
        "build-package": "npm run _transpile && npm run _generate-type-definitions && node tasks/prepare-package.mjs",
        "build-site": "shx rm -rf build/site && npm run _build-static-site && npm run build-apidoc && npm run _build-tutorials && npm run build-examples",
        "build": "npm run build-package",
        "commit": "npx git-cz",
        "format-eslint": "eslint . --fix --ignore-path .gitignore",
        "format-prettier": "prettier --write .",
        "format-markdownlint": "markdownlint . --fix --ignore-path .gitignore",
        "format": "npm run format-eslint && npm run format-prettier && npm run format-markdownlint",
        "lint-prettier": "prettier --check .",
        "lint-commit": "commitlint -x @commitlint/config-conventional --from=origin/HEAD --to=HEAD",
        "lint-doc": "tsc -p doc && typedoc --emit none",
        "lint-eslint": "npm run _transpile && eslint \"src/**/*.ts\" \"test/**/*.js\" \"test/**/*.ts\" \"examples/**/*.js\"",
        "lint-markdownlint": "markdownlint . --ignore-path .gitignore",
        "lint": "npm run lint-doc && npm run _check-folders && npm run lint-eslint && npm run lint-prettier && npm run lint-markdownlint",
        "make-package": "npm run build-package && npm pack build/giro3d/",
        "prepack": "npm run build-package",
        "serve-apidoc": "npm run build-apidoc && npm run _build-site-theme && shx cp -r build/site/assets/* build/site/apidoc/assets/ && shx cp -r build/site/images build/site/apidoc/images && concurrently --kill-others \"typedoc --watch --cleanOutputDir false\" \"npx http-server build/site/apidoc\"",
        "serve-examples": "npm run build-examples && npm run _build-site-theme && concurrently --kill-others \"npm run watch\" \"webpack serve --config examples/webpack/config.mjs --mode=production\"",
        "serve-site": "npm run build-site && npx http-server build/site/",
        "start": "npm run build-examples:dev && npm run _build-site-theme && concurrently --kill-others \"npm run watch\" \"webpack serve --config examples/webpack/config.mjs --mode=development\"",
        "test-unit": "jest test/unit",
        "test-with-coverage": "jest test/unit --coverage",
        "test": "npm run lint -- --max-warnings=0 && npm run build && npm run test-with-coverage",
        "watch": "node observer.mjs ./src ./build/giro3d",
        "prepare": "husky"
    },
    "repository": {
        "type": "git",
        "url": "git+https://gitlab.com/giro3d/giro3d.git"
    },
    "license": "MIT",
    "bugs": {
        "url": "https://gitlab.com/giro3d/giro3d/-/issues"
    },
    "homepage": "https://giro3d.org/",
    "browserslist": [
        ">0.5%",
        "not dead",
        "not op_mini all",
        "Firefox ESR"
    ],
    "dependencies": {
        "@babel/runtime": "^7.17.9",
        "chart.js": "^3.9.1",
        "earcut": "^2.2.4",
        "geotiff": "^2.1.0",
        "lil-gui": "^0.17.0",
        "lru-cache": "^10.0.1"
    },
    "peerDependencies": {
        "ol": "6 - 8",
        "proj4": "^2.9.0",
        "three": "^0.160.0"
    },
    "devDependencies": {
        "@babel/cli": "^7.17.10",
        "@babel/core": "^7.22.9",
        "@babel/plugin-transform-runtime": "^7.17.10",
        "@babel/preset-env": "^7.17.10",
        "@babel/preset-typescript": "^7.22.5",
        "@babel/register": "^7.17.7",
        "@commitlint/cli": "^17.0.3",
        "@commitlint/config-conventional": "^17.0.3",
        "@turf/turf": "^6.5.0",
        "@types/earcut": "^2.1.1",
        "@types/jest": "^29.5.3",
        "@types/proj4": "^2.5.2",
        "@types/three": "^0.160.0",
        "@typescript-eslint/eslint-plugin": "^5.62.0",
        "@typescript-eslint/parser": "^5.62.0",
        "assert": "^2.0.0",
        "babel-jest": "^29.6.1",
        "babel-loader": "^8.2.5",
        "babel-plugin-inline-import": "^3.0.0",
        "babel-plugin-minify-dead-code-elimination": "^0.5.2",
        "babel-plugin-minify-replace": "^0.5.0",
        "babel-polyfill": "^6.26.0",
        "bootstrap": "^5.3.3",
        "bootstrap-icons": "^1.11.3",
        "browserslist": "^4.23.0",
        "chokidar": "^3.5.3",
        "colormap": "^2.3.2",
        "concurrently": "^8.2.0",
        "copy-webpack-plugin": "^11.0.0",
        "cross-env": "^3.1.4",
        "docco-next": "^0.9.14",
        "es-main": "^1.2.0",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-import-resolver-alias": "^1.1.2",
        "eslint-import-resolver-typescript": "^3.5.5",
        "eslint-import-resolver-webpack": "^0.13.0",
        "eslint-plugin-compat": "^4.0.2",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^26.5.3",
        "eslint-plugin-prettier": "^5.1.3",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-webpack-plugin": "^2.4.1",
        "front-matter": "^4.0.2",
        "fs": "^0.0.2",
        "glob": "^8.0.3",
        "husky": "^9.0.11",
        "jest": "^29.6.1",
        "jest-environment-jsdom": "^28.0.2",
        "jsdom": "^20.0.0",
        "path": "^0.12.7",
        "markdownlint": "^0.33.0",
        "markdownlint-cli": "^0.39.0",
        "prettier": "^3.2.5",
        "prettier-eslint": "^16.3.0",
        "process": "^0.11.10",
        "proj4": "^2.9.0",
        "sass": "^1.70.0",
        "shiki": "^0.14.6",
        "shx": "^0.3.2",
        "ts-jest": "^29.1.1",
        "typedoc": "^0.24.8",
        "typescript": "^4.9.3",
        "util": "^0.12.5",
        "webpack": "^5.72.1",
        "webpack-cli": "^4.9.2",
        "webpack-dev-server": "^4.9.0",
        "webpack-glsl-loader": "^1.0.1"
    },
    "lint-staged": {
        "**/*.{ts,vue,js,jsx,cjs,mjs}": [
            "eslint",
            "prettier"
        ],
        "**/*.{json,jsonc,css,scss}": [
            "prettier"
        ],
        "**/*.md": [
            "markdownlint",
            "prettier"
        ]
    },
    "config": {
        "commitizen": {
            "path": "@commitlint/cz-commitlint",
            "name": "cz_conventional_commits",
            "tag_format": "v$version"
        }
    }
}
