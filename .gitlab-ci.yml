# TODO find a way to use stages with 2 parallel pipelines
#
# rationale: I'd like to have a 3 stages pipelines: install, test and deploy, and execute it for
# each supported node version.
#
# I cannot really do that now because gitlab does not seem to support having 2 distinct pipelines.
# the only thing you can do is:
#
#          stage install               stage test              stage deploy
# *---- npm i with node 8----*----npm test with node 8----*---...
#  \___ npm i with node 10__/ \___npm test with node 10___/
#
# this is problematic because I really don't want the node_modules/ folder to be mixed between
# versions.
#
# Instead, we'd like to have:
#
# *---- npm i with node 8----*----npm test with node 8----*---...
# *---- npm i with node 10---*----npm test with node 10___*---...
#

stages:
    - build
    - lint
    - test-unit

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/

build_lts:
    stage: build
    image: node:lts-alpine
    script:
        - npm i
        - npm run build
        - npm pack
    artifacts:
        paths:
            - dist
            - giro3d-*.tgz
        name: "$CI_COMMIT_REF_SLUG"

build_current:
    stage: build
    image: node:current-alpine
    script:
        - export NODE_OPTIONS=--openssl-legacy-provider
        - npm i
        - npm run build
        - npm pack

lint:
    stage: lint
    needs: [build_lts]
    image: node:lts-alpine
    script: npm run lint -- --max-warnings=0

test_unit_lts:
    stage: test-unit
    needs: [build_lts]
    image: node:lts-alpine
    script:
        - npm run test-unit

test_unit_current:
    stage: test-unit
    needs: [build_current]
    image: node:current-alpine
    script:
        - npm run test-unit
